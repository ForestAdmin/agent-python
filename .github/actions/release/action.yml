name: "Releasing"
description: "The semantic release action"
inputs:
  packages:
    required: true
    description: "The package to release"
  GH_TOKEN:
    description: "GITHUB token"
    required: true
  GIT_AUTHOR_EMAIL:
    description: "git author email"
    required: true
  GIT_AUTHOR_NAME:
    description: "git author name"
    required: true
  GIT_COMMITTER_EMAIL:
    description: "git committer mail"
    required: true
  GIT_COMMITTER_NAME:
    description: "git committer name"
    required: true
  SLACK_WEBHOOK:
    description: "slack webhook"
    required: true
outputs:
  new_release_published:
    description: "is new release publish"
    value: ${{ steps.semantic.outputs.new_release_published }}
  new_release_version:
    description: "the new release version"
    value: ${{ steps.semantic.outputs.new_release_version }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: false # GITHUB_TOKEN must not be set for the semantic release
    - uses: actions/setup-node@v2
      with:
        node-version: 14.17.6
    # - uses: actions/cache@v4
    #   with:
    #     path: '**/node_modules'
    #     key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
    - name: install dependencies
      shell: bash
      run: yarn install --non-interactive
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install python-toml
      shell: bash
      run: python -m pip install toml
    - name: Semantic Release
      uses: cycjimmy/semantic-release-action@v2
      id: semantic
      with:
        semantic_version: 17.3.0
      env:
        GITHUB_TOKEN: ${{ inputs.GH_TOKEN }}
        GIT_AUTHOR_EMAIL: ${{ inputs.GIT_AUTHOR_EMAIL }}
        GIT_AUTHOR_NAME: ${{ inputs.GIT_AUTHOR_NAME }}
        GIT_COMMITTER_EMAIL: ${{ inputs.GIT_COMMITTER_EMAIL }}
        GIT_COMMITTER_NAME: ${{ inputs.GIT_COMMITTER_NAME }}
        SLACK_WEBHOOK: ${{ inputs.SLACK_WEBHOOK }}
