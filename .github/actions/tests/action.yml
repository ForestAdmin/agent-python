name: "Tests"
description: ""
inputs:
  python-version:
    required: true
    description: "The python-version used to define the python uses"
  current_package:
    required: true
    description: "The package to test"
runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      shell: bash
      run: pipx install poetry
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    # We are not caching here, because it's impossible to have less than 160MB of cache, meaning
    # *6 subpackage, * 5 python version = 5GB, it's too much.
    - name: Install package dependencies
      shell: bash
      working-directory: ${{ inputs.current_package }}
      run: poetry install --no-interaction --with test
    - name: Test with pytest
      shell: bash
      working-directory: ${{ inputs.current_package }}
      run: poetry run coverage run -m pytest
    - name: Extract source name
      uses: jungwinter/split@v2
      id: split
      with:
        msg: ${{ inputs.current_package }}
        separator: '/'
    - name: Archive code coverage results
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-report.${{ steps.split.outputs._2 }}.${{ inputs.python-version }}
        path: '${{ inputs.current_package }}.coverage'
        include-hidden-files: 'true'