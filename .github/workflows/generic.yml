name: Reusable package workflow

on:
  workflow_call:
    inputs:
      packages:
        required: true
        type: string
    secrets:
      CC_TEST_REPORTER_ID:
        required: true
      PYPI_TOKEN:
        required: true
      GH_TOKEN:
        required: true
      GIT_AUTHOR_EMAIL:
        required: true
      GIT_AUTHOR_NAME:
        required: true
      GIT_COMMITTER_EMAIL:
        required: true
      GIT_COMMITTER_NAME:
        required: true
      SLACK_WEBHOOK:
        required: true
jobs:
  changes:
    name: changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: changes
        uses: ./.github/actions/changes
  lint:
    name: Linting
    needs: [ changes ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
        current_package: ${{ fromJson(inputs.packages) }}
    steps:
      - uses: actions/checkout@v3
      - id: lint
        if: needs.changes.steps.changes.outputs.${{ matrix.current_package }} == 'true'
        uses: ./.github/actions/linting
        with:
          python-version: ${{ matrix.python-version }}
          current_package: ${{ matrix.current_package }}
  isort:
    name: Isorting
    needs: [ changes ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
        current_package: ${{ fromJson(inputs.packages) }}
    steps:
      - uses: actions/checkout@v3
      - id: isort
        if: needs.changes.outputs.${{ matrix.current_package }} == 'true'
        uses: ./.github/actions/isort
        with:
          python-version: ${{ matrix.python-version }}
          current_package: ${{ matrix.current_package }}
  black:
    name: Black
    needs: [ changes ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
        current_package: ${{ fromJson(inputs.packages) }}
    steps:
      - uses: actions/checkout@v3
      - id: isort
        if: needs.changes.outputs.${{ matrix.current_package }} == 'true'
        uses: ./.github/actions/black
        with:
          python-version: ${{ matrix.python-version }}
          current_package: ${{ matrix.current_package }}
  # test:
  #   name: Test
  #   needs: [isort, lint, black]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: ['3.10']
  #       # python-version: [3.7, 3.8, 3.9, '3.10', 3.11]
  #       current_package: ${{ fromJson(inputs.packages) }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - id: tests
  #       if: steps.changes.outputs.${{ matrix.current_package }} == 'true'
  #       uses: ./.github/actions/tests
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #         current_package: ${{ matrix.current_package }}
  # coverage:
  #   name: Coverage
  #   needs: [test]
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       python-version: ['3.10']
  #   steps:
  #     - uses: actions/checkout@v3
  #     - id: coverage
  #       uses: ./.github/actions/coverage
  #       with:
  #         python-version: ${{ matrix.python-version }}
  #         current_package: ./src/datasource_toolkit
  #         CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}

  semantic_release:
    name: Semantic release
    # needs: [coverage]
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && github.ref == 'refs/heads/beta'
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v3
      - id: release
        uses: ./.github/actions/release
        with:
          packages: ${{ inputs.packages }}
        # secrets:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: ${{ secrets.GIT_AUTHOR_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_COMMITTER_NAME }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  update_dependencies:
    name: Update local dependencies
    needs: [semantic_release]
    if: github.event_name == 'push' && github.ref == 'refs/heads/beta'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: dependencies
        shell: bash
        run: |
          pip install toml
          git pull
          python .github/update_nested_dependencies.py
      - id: commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          skip_fetch: false
          commit_message: "chore(dependencies): Update linked dependencies"
          commit_user_name: github-actions
          commit_user_email: github-actions@github.com

  pypi:
    name: Push to pypi
    if: github.event_name == 'push' && github.ref == 'refs/heads/beta'
    needs: [semantic_release]
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: ['3.10']
        current_package: ${{ fromJson(inputs.packages) }}
    steps:
      - uses: actions/checkout@v3
      - id: pypi
        uses: ./.github/actions/pypi
        with:
          current_package: ${{ matrix.current_package }}
          python-version: ${{ matrix.python-version }}
          pypi_token: ${{ secrets.PYPI_TOKEN }}

  update_locks:
    name: Update poetry locks
    needs: [pypi]
    if: github.event_name == 'push' && github.ref == 'refs/heads/beta'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: dependencies
        shell: bash
        env:
          PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
        run: |
          pip install toml
          pip install poetry
          git pull
          cd ./src/agent_toolkit/
          poetry search forestadmin-datasource-toolkit
          poetry lock --no-update
          cd -
          python .github/update_nested_dependencies.py --only_update_lock
      - id: commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          skip_fetch: false
          commit_message: "chore: Update locks poetry"
          commit_user_name: github-actions
          commit_user_email: github-actions@github.com