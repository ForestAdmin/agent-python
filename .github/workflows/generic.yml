name: Reusable package workflow

on:
  workflow_call:
    inputs:
      packages:
        required: true
        type: string
    secrets:
      CC_TEST_REPORTER_ID:
        required: true
jobs:
  changes:
    name: changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: changes
        uses: ./.github/actions/changes
  lint:
    name: Linting
    needs: [ changes ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
        current_package: ${{ fromJson(inputs.packages) }}
    steps:
      - uses: actions/checkout@v3
      - id: lint
        if: needs.changes.steps.changes.outputs.${{ matrix.current_package }} == 'true'
        uses: ./.github/actions/linting
        with:
          python-version: ${{ matrix.python-version }}
          current_package: ${{ matrix.current_package }}
  isort:
    name: Isorting
    needs: [ changes ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
        current_package: ${{ fromJson(inputs.packages) }}
    steps:
      - uses: actions/checkout@v3
      - id: isort
        if: needs.changes.outputs.${{ matrix.current_package }} == 'true'
        uses: ./.github/actions/isort
        with:
          python-version: ${{ matrix.python-version }}
          current_package: ${{ matrix.current_package }}
  black:
    name: Black
    needs: [ changes ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
        current_package: ${{ fromJson(inputs.packages) }}
    steps:
      - uses: actions/checkout@v3
      - id: isort
        if: needs.changes.outputs.${{ matrix.current_package }} == 'true'
        uses: ./.github/actions/black
        with:
          python-version: ${{ matrix.python-version }}
          current_package: ${{ matrix.current_package }}
  test:
    name: Test
    needs: [isort, lint, black]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10']
        current_package: ${{ fromJson(inputs.packages) }}
    steps:
      - uses: actions/checkout@v3
      - id: tests
        if: steps.changes.outputs.${{ matrix.current_package }} == 'true'
        uses: ./.github/actions/tests
        with:
          python-version: ${{ matrix.python-version }}
          current_package: ${{ matrix.current_package }}
  coverage:
    name: Coverage
    needs: [test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v3
      -  id: coverage
         uses: ./.github/actions/coverage
         with:
          python-version: ${{ matrix.python-version }}
          current_package: ./src/datasource_toolkit
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
  update_dependencies:
    name: Update local dependencies
    needs: [test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/beta'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - id: dependencies
        shell: bash
        run: |
          pip install toml
          pip install python-semantic-release
          python .github/update_nested_dependencies.py
      - id: commit
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update linked dependencies
          commit_user_name: github-actions
          commit_user_email: github-actions@github.com

  semantic_release:
    name: Semantic release
    needs: [coverage]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/beta'
    strategy:
      matrix:
        python-version: ['3.10']
    steps:
      - uses: actions/checkout@v3
      - id: release
        uses: ./.github/actions/release  
        with:
          packages: ${{ inputs.packages }}
  pypi:
    name: Push to pypi
    if: github.event_name == 'push' && github.ref == 'refs/heads/beta'
    needs: [semantic_release]
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        python-version: ['3.10']
        current_package: ${{ fromJson(inputs.packages) }}
    steps:
      - uses: actions/checkout@v3
      - id: pypi
        uses: ./.github/actions/pypi  
        with:
          current_package: ${{ matrix.current_package }}
          python-version: ${{ matrix.python-version }}
